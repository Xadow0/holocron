trigger:
- Page-Init  # O la rama que uses para producci√≥n

pool:
  vmImage: 'windows-latest' # Usa Windows para .NET y App Service

variables:
  buildConfiguration: 'Release'
  dotnetVersion: '8.0.x'
  appServiceName: 'lsanwebapp01'  # Nombre de tu App Service

stages:
- stage: Build
  displayName: 'Compilar y Publicar'
  jobs:
  - job: Build
    steps:
    - task: UseDotNet@2
      displayName: 'Instalar .NET 8'
      inputs:
        packageType: 'sdk'
        version: '$(dotnetVersion)'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: |
        dotnet restore
        dotnet build --configuration $(buildConfiguration) --no-restore
      displayName: 'Restaurar y Compilar'

    - script: |
        dotnet publish Holocron.API/Holocron.API.csproj --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)
      displayName: 'Publicar API'

    - task: PublishBuildArtifacts@1
      displayName: 'Subir Artefacto'
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: 'drop'

- stage: Deploy
  displayName: 'Desplegar en Azure'
  dependsOn: Build
  jobs:
  - deployment: DeployWebApp
    displayName: 'Deploy en Azure App Service'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Descargar Artefactos'
            inputs:
              artifactName: 'drop'
              downloadPath: $(System.ArtifactsDirectory)

          - task: AzureWebApp@1
            displayName: 'Desplegar en Azure App Service'
            inputs:
              azureSubscription: 'AzureConnection-Holocron'  # Configurar en Azure DevOps
              appName: '$(appServiceName)'
              appType: webApp
              package: '$(System.ArtifactsDirectory)/drop'
              runtimeStack: 'DOTNETCORE:8.0'
