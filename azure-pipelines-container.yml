pool:
  vmImage: 'ubuntu-latest'

variables:
  containerRegistry: 'holocronregistry.azurecr.io'
  imageName: 'holocron-api'
  buildConfiguration: 'Release'
  azureSubscription: 'AzureConnection-Holocron'
  containerAppName: 'holocron-container-app'  # Nombre del Container App
  resourceGroup: 'lsanwebapp01_group'  # Grupo de recursos de Azure

stages:
- stage: Build
  displayName: 'Construir y subir imagen a ACR'
  jobs:
  - job: BuildAndPush
    displayName: 'Construcci√≥n y Push a ACR'
    steps:

    - task: Docker@2
      displayName: 'Autenticarse en ACR'
      inputs:
        command: login
        containerRegistry: 'ContainerConnectionRegistry'

    - task: Docker@2
      displayName: 'Construir la imagen Docker'
      inputs:
        command: build
        Dockerfile: 'Holocron.API/Dockerfile'
        buildContext: '.'
        repository: '$(containerRegistry)/$(imageName)'
        tags: '$(Build.BuildId)'

    - task: Docker@2
      displayName: 'Push de imagen a ACR'
      inputs:
        command: push
        repository: '$(containerRegistry)/$(imageName)'
        tags: '$(Build.BuildId)'

- stage: Deploy
  displayName: 'Desplegar en Azure Container Apps'
  dependsOn: Build
  jobs:
  - job: DeployContainerApp
    displayName: 'Desplegar en Azure Container App'
    steps:

    - task: AzureCLI@2
      displayName: 'Actualizar imagen en Azure Container App'
      inputs:
        azureSubscription: '$(azureSubscription)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az containerapp update \
            --name $(containerAppName) \
            --resource-group $(resourceGroup) \
            --image $(containerRegistry)/$(imageName):$(Build.BuildId) \
            --set-env-vars "ASPNETCORE_ENVIRONMENT=Production"
